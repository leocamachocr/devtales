---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { 
  combineAndSortContent, 
  getContentType, 
  getContentUrl, 
  getContentStats,
  formatDate,
  formatRelativeDate 
} from '../utils/content';

// Get the latest tales and posts for the homepage
const tales = await getCollection('tales');
const posts = await getCollection('posts');

// Combine and sort by date (most recent first) - show latest 6 items
const allContent = combineAndSortContent(tales, posts, 6);

// Get content statistics (optional - for future use)
const stats = getContentStats(tales, posts);
---

<Layout title="Dev Tales - Leonardo Camacho">
  <!-- <section class="hero">
    <h1>Welcome to Dev Tales</h1>
    <p class="hero-description">
      I'm Leonardo Camacho, a software engineer who believes code tells stories.
      Here, you'll find real-world experiences, lessons learned, and perspectives on building software — 
      all wrapped in stories that make tech feel human.
    </p>
  </section> -->

  {allContent.length > 0 && (
    <section class="featured-content">
      {/* <h2>Latest Stories & Articles</h2> */}
      <div class="content-grid">
        {allContent.map((item) => {
          const contentType = getContentType(item.slug, tales);
          const url = getContentUrl(item, tales);
          
          return (
            <article class="content-card">
              {item.data.image && (
                <div class="card-thumbnail">
                  <img 
                    src={item.data.image} 
                    alt={item.data.imageAlt || item.data.title}
                    loading="lazy"
                  />
                  <div class="content-type-badge">
                    {contentType}
                  </div>
                </div>
              )}
              <div class="card-content">
                <h3>
                  <a href={url}>
                    {item.data.title}
                  </a>
                </h3>
                <p class="card-meta">
                  <time title={formatDate(item.data.date)}>{formatRelativeDate(item.data.date)}</time>
                  <span class="separator">•</span>
                  <span class="content-category">{item.data.category}</span>
                </p>
                <p class="card-description">{item.data.description}</p>
                {item.data.tags && item.data.tags.length > 0 && (
                  <div class="card-tags">
                    {item.data.tags.slice(0, 3).map((tag: string) => (
                      <span class="tag">
                        #{tag}
                      </span>
                    ))}
                  </div>
                )}
              </div>
            </article>
          );
        })}
      </div>
      <div class="view-all-actions">
        <a href="/devtales/tales" class="view-all-link">View All Tales →</a>
        <a href="/devtales/posts" class="view-all-link">View All Posts →</a>
      </div>
    </section>
  )}
</Layout>

<style>
  .hero {
    text-align: center;
    padding: 4rem 2rem;
    max-width: 800px;
    margin: 0 auto;
  }

  .hero h1 {
    font-size: 3rem;
    color: var(--color-accent);
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .hero-description {
    font-size: 1.2rem;
    line-height: 1.7;
    color: var(--color-text);
    margin-bottom: 2.5rem;
  }

  .hero-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .cta-button {
    padding: 1rem 2rem;
    border-radius: var(--radius);
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    display: inline-block;
  }

  .cta-button.primary {
    background: var(--color-accent);
    color: white;
  }

  .cta-button.primary:hover {
    background: var(--color-highlight);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(159, 134, 192, 0.3);
    color: white;
  }

  .cta-button.secondary {
    background: transparent;
    color: var(--color-accent);
    border: 2px solid var(--color-accent);
  }

  .cta-button.secondary:hover {
    background: var(--color-accent);
    color: white;
  }

  .featured-content {
    max-width: 1200px;
    margin: 4rem auto;
    padding: 0 2rem;
  }

  .featured-content h2 {
    font-size: 2rem;
    color: var(--color-accent);
    margin-bottom: 2rem;
    text-align: center;
  }

  .content-grid {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  }

  .content-card {
    background: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius);
    overflow: hidden;
    box-shadow: var(--shadow-light);
    transition: all 0.3s ease;
    position: relative;
  }

  .content-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
  }

  .card-thumbnail {
    aspect-ratio: 16/9;
    overflow: hidden;
    background: var(--color-border);
    position: relative;
  }

  .card-thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform 0.3s ease;
  }

  .content-card:hover .card-thumbnail img {
    transform: scale(1.05);
  }

  .content-type-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 0.4rem 0.8rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
    backdrop-filter: blur(4px);
  }

  .card-content {
    padding: 1.5rem;
  }

  .card-content h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.3rem;
    line-height: 1.3;
  }

  .card-content h3 a {
    color: var(--color-text);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .card-content h3 a:hover {
    color: var(--color-accent);
  }

  .card-meta {
    color: var(--color-muted);
    font-size: 0.9rem;
    margin: 0 0 1rem 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .separator {
    color: var(--color-border);
  }

  .content-category {
    background: var(--color-highlight);
    color: white;
    padding: 0.2rem 0.6rem;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 600;
  }

  .card-description {
    color: var(--color-text);
    line-height: 1.6;
    margin: 0 0 1rem 0;
  }

  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: linear-gradient(135deg, var(--color-accent), var(--color-highlight));
    color: white;
    font-size: 0.75rem;
    font-weight: 600;
    padding: 0.3rem 0.6rem;
    border-radius: 15px;
  }

  .view-all-actions {
    text-align: center;
    margin-top: 3rem;
    display: flex;
    gap: 2rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .view-all-link {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600;
    font-size: 1.1rem;
    transition: color 0.3s ease;
  }

  .view-all-link:hover {
    color: var(--color-highlight);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .hero h1 {
      font-size: 2.5rem;
    }

    .hero-description {
      font-size: 1.1rem;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
    }

    .cta-button {
      width: 100%;
      max-width: 250px;
      text-align: center;
    }

    .content-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .featured-content {
      padding: 0 1rem;
    }

    .card-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.3rem;
    }

    .view-all-actions {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>
