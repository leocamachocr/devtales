---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

// Get the latest tales for the homepage
const tales = await getCollection('tales');
const latestTales = tales.slice(0, 3); // Show latest 3 tales
---

<Layout title="Dev Tales - Leonardo Camacho">
  <section class="hero">
    <h1>Welcome to Dev Tales</h1>
    <p class="hero-description">
      I'm Leonardo Camacho, a software engineer who believes code tells stories.
      Here, you'll find real-world experiences, lessons learned, and perspectives on building software — 
      all wrapped in stories that make tech feel human.
    </p>
    <div class="hero-actions">
      <a href="/tales" class="cta-button primary">Read Stories</a>
      <a href="/about" class="cta-button secondary">About Me</a>
    </div>
  </section>

  {latestTales.length > 0 && (
    <section class="featured-tales">
      <h2>Latest Tales</h2>
      <div class="tales-preview">
        {latestTales.map(tale => (
          <article class="tale-preview-card">
            {tale.data.image && (
              <div class="preview-thumbnail">
                <img 
                  src={tale.data.image} 
                  alt={tale.data.imageAlt || tale.data.title}
                  loading="lazy"
                />
              </div>
            )}
            <div class="preview-content">
              <h3>
                <a href={`/tales/${tale.slug}/`}>{tale.data.title}</a>
              </h3>
              <p class="preview-meta">
                <time>{tale.data.date.toDateString()}</time>
              </p>
              <p class="preview-description">{tale.data.description}</p>
              {tale.data.tags && tale.data.tags.length > 0 && (
                <div class="preview-tags">
                  {tale.data.tags.slice(0, 2).map((tag) => (
                    <span class="tag">#{tag}</span>
                  ))}
                </div>
              )}
            </div>
          </article>
        ))}
      </div>
      <div class="view-all">
        <a href="/tales" class="view-all-link">View All Tales →</a>
      </div>
    </section>
  )}
</Layout>

<style>
  .hero {
    text-align: center;
    padding: 4rem 2rem;
    max-width: 800px;
    margin: 0 auto;
  }

  .hero h1 {
    font-size: 3rem;
    color: var(--color-accent);
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .hero-description {
    font-size: 1.2rem;
    line-height: 1.7;
    color: var(--color-text);
    margin-bottom: 2.5rem;
  }

  .hero-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .cta-button {
    padding: 1rem 2rem;
    border-radius: var(--radius);
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    display: inline-block;
  }

  .cta-button.primary {
    background: var(--color-accent);
    color: white;
  }

  .cta-button.primary:hover {
    background: var(--color-highlight);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(159, 134, 192, 0.3);
    color: white;
  }

  .cta-button.secondary {
    background: transparent;
    color: var(--color-accent);
    border: 2px solid var(--color-accent);
  }

  .cta-button.secondary:hover {
    background: var(--color-accent);
    color: white;
  }

  .featured-tales {
    max-width: 1200px;
    margin: 4rem auto;
    padding: 0 2rem;
  }

  .featured-tales h2 {
    font-size: 2rem;
    color: var(--color-accent);
    margin-bottom: 2rem;
    text-align: center;
  }

  .tales-preview {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  }

  .tale-preview-card {
    background: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius);
    overflow: hidden;
    box-shadow: var(--shadow-light);
    transition: all 0.3s ease;
  }

  .tale-preview-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
  }

  .preview-thumbnail {
    aspect-ratio: 16/9;
    overflow: hidden;
    background: var(--color-border);
  }

  .preview-thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform 0.3s ease;
  }

  .tale-preview-card:hover .preview-thumbnail img {
    transform: scale(1.05);
  }

  .preview-content {
    padding: 1.5rem;
  }

  .preview-content h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.3rem;
    line-height: 1.3;
  }

  .preview-content h3 a {
    color: var(--color-text);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .preview-content h3 a:hover {
    color: var(--color-accent);
  }

  .preview-meta {
    color: var(--color-muted);
    font-size: 0.9rem;
    margin: 0 0 1rem 0;
  }

  .preview-description {
    color: var(--color-text);
    line-height: 1.6;
    margin: 0 0 1rem 0;
  }

  .preview-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: linear-gradient(135deg, var(--color-accent), var(--color-highlight));
    color: white;
    font-size: 0.75rem;
    font-weight: 600;
    padding: 0.3rem 0.6rem;
    border-radius: 15px;
  }

  .view-all {
    text-align: center;
    margin-top: 3rem;
  }

  .view-all-link {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600;
    font-size: 1.1rem;
    transition: color 0.3s ease;
  }

  .view-all-link:hover {
    color: var(--color-highlight);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .hero h1 {
      font-size: 2.5rem;
    }

    .hero-description {
      font-size: 1.1rem;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
    }

    .cta-button {
      width: 100%;
      max-width: 250px;
      text-align: center;
    }

    .tales-preview {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .featured-tales {
      padding: 0 1rem;
    }
  }
</style>
